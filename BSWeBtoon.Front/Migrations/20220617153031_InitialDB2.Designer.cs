// <auto-generated />
using System;
using BSWeBtoon.Front.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BSWeBtoon.Front.Migrations
{
    [DbContext(typeof(BSWebtoonDBContext))]
    [Migration("20220617153031_InitialDB2")]
    partial class InitialDB2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BSWeBtoon.Front.Models.ComicCheckType", b =>
                {
                    b.Property<string>("ComicCheckTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComicCheckTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComicCheckTypeId");

                    b.ToTable("ComicCheckTypes");

                    b.HasData(
                        new
                        {
                            ComicCheckTypeId = "1",
                            ComicCheckTypeName = "審核過"
                        },
                        new
                        {
                            ComicCheckTypeId = "2",
                            ComicCheckTypeName = "審核中"
                        },
                        new
                        {
                            ComicCheckTypeId = "3",
                            ComicCheckTypeName = "未審核"
                        },
                        new
                        {
                            ComicCheckTypeId = "4",
                            ComicCheckTypeName = "買版權"
                        });
                });

            modelBuilder.Entity("BSWeBtoon.Front.Models.Recharge", b =>
                {
                    b.Property<string>("RechargeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoinId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RechargeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RechargeId");

                    b.ToTable("Recharges");

                    b.HasData(
                        new
                        {
                            RechargeId = "R0001",
                            CoinId = "1",
                            MemberId = "M0001",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0002",
                            CoinId = "1",
                            MemberId = "M0001",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0003",
                            CoinId = "3",
                            MemberId = "M0002",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0004",
                            CoinId = "2",
                            MemberId = "M0003",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0005",
                            CoinId = "1",
                            MemberId = "M0003",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0006",
                            CoinId = "1",
                            MemberId = "M0003",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RechargeId = "R0007",
                            CoinId = "2",
                            MemberId = "M0004",
                            PayMethod = "1",
                            RechargeDate = new DateTime(2022, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BSWeBtoon.Front.Models.Report", b =>
                {
                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BeReportedMemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportMemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportReasonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = "",
                            BeReportedMemberId = "",
                            CommentId = "",
                            ReportMemberId = "",
                            ReportReasonId = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
